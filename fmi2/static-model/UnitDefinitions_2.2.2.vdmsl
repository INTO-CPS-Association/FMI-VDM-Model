/*********************************************************************************
 *
 *	Copyright (c) 2017-2022, INTO-CPS Association,
 *	c/o Professor Peter Gorm Larsen, Department of Engineering
 *	Finlandsgade 22, 8200 Aarhus N.
 *
 *	MIT Licence:
 *
 *	Permission is hereby granted, free of charge, to any person obtaining a copy of
 *	this software and associated documentation files (the "Software"), to deal in
 *	the Software without restriction, including without limitation the rights to use,
 *	copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 *	Software, and to permit persons to whom the Software is furnished to do so,
 *	subject to the following conditions:
 *
 *	The above copyright notice and this permission notice shall be included in all
 *	copies or substantial portions of the Software.
 *
 *	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 *	INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 *	PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *	HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 *	OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 *	SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *	SPDX-License-Identifier: MIT
 *
 *********************************************************************************/

/**
 * 2.2.2 Unit Definitions.
 */
functions
	isValidUnitDefinitions: [seq1 of Unit] +> bool
	isValidUnitDefinitions(units) ==
		units <> nil =>
			/* @OnFail(1050, "2.2.2 UnitDefinitions names are not unique: %s",
				{ units(a).name | a, b in set inds units &
					a <> b and units(a).name = units(b).name }) */
			( card { unit.name | unit in seq units } = len units );

	effBaseUnit: BaseUnit +> BaseUnit
	effBaseUnit(b) ==
		mk_BaseUnit
		(
			b.location,
			nilInt(b.kg),
			nilInt(b.m),
			nilInt(b.s),
			nilInt(b.a),
			nilInt(b.k),
			nilInt(b.mol),
			nilInt(b.cd),
			nilInt(b.rad),
			if b.factor = nil then 1 else b.factor,
			nilReal(b.offset)
		);

	effDisplayUnit: DisplayUnit +> DisplayUnit
	effDisplayUnit(d) ==
		mk_DisplayUnit
		(
			d.location,
			d.name,
			if d.factor = nil then 1 else d.factor,
			nilReal(d.offset)
		);
