/**
 * This file is part of the INTO-CPS toolchain.
 *
 * Copyright (c) 2017-2019, INTO-CPS Association,
 * c/o Professor Peter Gorm Larsen, Department of Engineering
 * Finlandsgade 22, 8200 Aarhus N.
 *
 * All rights reserved.
 *
 * THIS PROGRAM IS PROVIDED UNDER THE TERMS OF GPL VERSION 3 LICENSE OR
 * THIS INTO-CPS ASSOCIATION PUBLIC LICENSE VERSION 1.0.
 * ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS PROGRAM CONSTITUTES
 * RECIPIENT'S ACCEPTANCE OF THE OSMC PUBLIC LICENSE OR THE GPL 
 * VERSION 3, ACCORDING TO RECIPIENTS CHOICE.
 *
 * The INTO-CPS toolchain  and the INTO-CPS Association Public License are
 * obtained from the INTO-CPS Association, either from the above address, from
 * the URLs: http://www.into-cps.org, and in the INTO-CPS toolchain distribution.
 * GNU version 3 is obtained from: http://www.gnu.org/copyleft/gpl.html.
 *
 * This program is distributed WITHOUT ANY WARRANTY; without
 * even the implied warranty of  MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE, EXCEPT AS EXPRESSLY SET FORTH IN THE
 * BY RECIPIENT SELECTED SUBSIDIARY LICENSE CONDITIONS OF
 * THE INTO-CPS ASSOCIATION.
 *
 * See the full INTO-CPS Association Public License conditions for more details.
 */

/**
 * 2.2.5 Default Experiment
 */
types
	DefaultExperiment ::
		location		: Location
		startTime		: [real]
		stopTime		: [real]
		tolerance		: [real]
		stepSize		: [real];

functions
	isValidDefaultExperiment: [DefaultExperiment] +> bool
	isValidDefaultExperiment(e) ==
		e <> nil =>
			{
				-- @OnFail("2.2.5 DefalutExperiment tolerance must be >= 0 at line %s", e.location)
				( e.tolerance <> nil => e.tolerance >= 0),

				-- @OnFail("2.2.5 DefaultExperiment stop time must be later than start time at line %s", e.location)
				( e.startTime <> nil and e.stopTime <> nil => e.stopTime > e.startTime ),

				-- @OnFail("2.2.5 DefaultExperiment stepSize must be less than start-stop interval at line %s", e.location)
				( e.startTime <> nil and e.stopTime <> nil and e.stepSize <> nil =>
					e.stopTime - e.startTime > e.stepSize )
			} = {true};
