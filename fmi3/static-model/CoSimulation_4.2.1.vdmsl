/**
 * This file is part of the INTO-CPS toolchain.
 *
 * Copyright (c) 2017-2019, INTO-CPS Association,
 * c/o Professor Peter Gorm Larsen, Department of Engineering
 * Finlandsgade 22, 8200 Aarhus N.
 *
 * All rights reserved.
 *
 * THIS PROGRAM IS PROVIDED UNDER THE TERMS OF GPL VERSION 3 LICENSE OR
 * THIS INTO-CPS ASSOCIATION PUBLIC LICENSE VERSION 1.0.
 * ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS PROGRAM CONSTITUTES
 * RECIPIENT'S ACCEPTANCE OF THE OSMC PUBLIC LICENSE OR THE GPL 
 * VERSION 3, ACCORDING TO RECIPIENTS CHOICE.
 *
 * The INTO-CPS toolchain  and the INTO-CPS Association Public License are
 * obtained from the INTO-CPS Association, either from the above address, from
 * the URLs: http://www.into-cps.org, and in the INTO-CPS toolchain distribution.
 * GNU version 3 is obtained from: http://www.gnu.org/copyleft/gpl.html.
 *
 * This program is distributed WITHOUT ANY WARRANTY; without
 * even the implied warranty of  MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE, EXCEPT AS EXPRESSLY SET FORTH IN THE
 * BY RECIPIENT SELECTED SUBSIDIARY LICENSE CONDITIONS OF
 * THE INTO-CPS ASSOCIATION.
 *
 * See the full INTO-CPS Association Public License conditions for more details.
 */

/**
 * 4.3.1 Definition of a CoSimulation and ScheduledExecution section of an FMU.
 */
types
	fmi3InterfaceType ::
		location								: Location
		annotations								: [fmi3Annotation]
		modelIdentifier							: NormalizedString
		needsExecutionTool						: [bool]
		canBeInstantiatedOnlyOncePerProcess		: [bool]
		canNotUseMemoryManagementFunctions		: [bool]
		canGetAndSetFMUState					: [bool]
		canSerializeFMUState					: [bool]
		providesDirectionalDerivatives			: [bool]
		providesAdjointDerivatives				: [bool]
		providesPerElementDependencies			: [bool];

	CoSimulation ::
		base									: fmi3InterfaceType
		canHandleVariableCommunicationStepSize	: [bool]
		maxOutputDerivativeOrder				: [nat]
		providesIntermediateUpdate				: [bool]
		recommendedIntermediateInputSmoothness	: [int]
		canReturnEarlyAfterIntermediateUpdate	: [bool]
		fixedInternalStepSize					: [real]
		hasEventMode							: [bool];

	ScheduledExecution ::
		base									: fmi3InterfaceType
		maxOutputDerivativeOrder				: [nat]
		providesIntermediateUpdate				: [bool]
		recommendedIntermediateInputSmoothness	: [int];

    CoSimulationKind = <CoSimulation> | <ScheduledExecution>;

functions

	/**
	 * Check CoSimulation and ScheduledExecution values.
	 */
	isValidCoSimulation: [CoSimulation] +> bool
	isValidCoSimulation(cs) ==
		cs <> nil => isValidInterfaceType(cs.base);

	isValidScheduledExecution: [ScheduledExecution] +> bool
	isValidScheduledExecution(se) ==
		se <> nil => isValidInterfaceType(se.base);

	isValidInterfaceType: fmi3InterfaceType +> bool
	isValidInterfaceType(itype) ==
	{
		-- @OnFail(1550, "4.3.1 Annotations invalid at line %s", itype.location)
		( isValidVendorAnnotation(itype.annotations) ),

		/* @OnFail(1551, "4.3.1 modelIdentifer %s not valid C variable name at line %s",
						itype.modelIdentifier, itype.location) */
		( itype.modelIdentifier <> ""
			and itype.modelIdentifier(1) in set elems NONDIGITS )
	}
	= {true};
