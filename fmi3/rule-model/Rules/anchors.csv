#_introduction,1. Introduction
#fmi-whats-new,1.1. What is new in FMI 3.0
#_overview,1.2. Overview
#_fmi_for_model_exchange_me,1.2.1. FMI for Model Exchange (ME)
#_fmi_for_co_simulation_cs,1.2.2. FMI for Co-Simulation (CS)
#_fmi_for_scheduled_execution_se,1.2.3. FMI for Scheduled Execution (SE)
#_feature_overview_of_the_interface_types,1.2.4. Feature Overview of the Interface Types
#_properties_and_guiding_ideas,1.3. Properties and Guiding Ideas
#_how_to_read_this_document,1.4. How to Read This Document
#fmi-common-concepts,2. Common Concepts
#mathematical-definitions,2.1. Mathematical Notation
#general-mechanisms,2.2. General Mechanisms
#_requirements_for_implementations_of_the_c_api,2.2.1. Requirements for Implementations of the C-API
#header-files-and-naming-of-functions,2.2.2. Header Files and Naming of Functions
#_platform_dependent_definitions,2.2.3. Platform Dependent Definitions
#status-returned-by-functions,2.2.4. Status Returned by Functions
#inquire-version-number,2.2.5. Inquire Version Number of Header Files
#advancing-time,2.2.6. Advancing Time
#fmu-variables,2.2.7. Variables
#serialization-of_variables,2.2.7.1. Serialization of Array Variables
#get-and-set-variable-values,2.2.7.2. Getting and Setting Variable Values
#min-max-violations,2.2.7.3. Handling min/max Range Violations
#get-set-fmu-state,2.2.7.4. Getting and Setting the Complete FMU State
#Clock,2.2.8. Clocks
#_motivation,2.2.8.1. Motivation
#fmi3Clock,2.2.8.2. Clock Types
#clocked-variable,2.2.8.3. Model Partitions and Clocked Variables
#_clocks_specific_api,2.2.8.4. Clocks specific API
#model-dependencies,2.2.9. Dependencies of Variables
#selective-computation,2.2.10. Selective Computation of Variables
#algebraic-loops,2.2.11. Algebraic Loops
#partial-derivatives,2.2.12. Getting Partial Derivatives
#directionDerivatives,2.2.12.1. Directional Derivatives
#adjointDerivatives,2.2.12.2. Adjoint Derivatives
#common-state-machine,2.3. State Machine and Semantics
#FMUStateSettable,2.3.1. Super State: FMU State Settable
#Instantiated,2.3.2. State: Instantiated
#InitializationMode,2.3.3. State: Initialization Mode
#Initialized,2.3.4. Super State: Initialized
#EventMode,2.3.5. State: Event Mode
#ConfigurationMode,2.3.6. State: Configuration Mode
#ReconfigurationMode,2.3.7. State: Reconfiguration Mode
#Terminated,2.3.8. State: Terminated
#modelDescription.xml,2.4. FMI Description Schema
#fmiModelDescription,2.4.1. Model Description
#common-capability-flags,2.4.2. Attributes and Capability Flags
#_physical_units,2.4.3. Physical Units
#definition-of-types,2.4.4. Variable Types
#definition-of-log-categories,2.4.5. Log Categories
#DefaultExperiment,2.4.6. Default Experiment
#ModelVariables,2.4.7. Model Variables
#_static_information,2.4.7.1. Static information
#Dimension,2.4.7.2. Array variables and structural parameters
#_alias_variables,2.4.7.3. Alias variables
#_variable_attributes,2.4.7.4. Variable Attributes
#_type_specific_properties,2.4.7.5. Type-specific properties
#namingSection,2.4.7.5.1. Variable Naming Conventions
#ModelStructure,2.4.8. Model Structure
#fmiTerminalsAndIcons,2.4.9. Terminals and Icons
#graphicalRepresentation,2.4.9.1. Definition of a Graphical Representation
#_overview_2,2.4.9.1.1. Overview
#_coordinatesystem,2.4.9.1.2. CoordinateSystem
#_icon,2.4.9.1.3. Icon
#_placement_extent_and_painting_order_of_graphical_items,2.4.9.1.4. Placement Extent and Painting Order of Graphical Items
#definitionOfTerminals,2.4.9.2. Definition of Terminals
#_overview_3,2.4.9.2.1. Overview
#section-terminals,2.4.9.2.2. Terminals
#section-terminalvars,2.4.9.2.3. Terminal Member Variable
#_terminal_stream_member_variable,2.4.9.2.4. Terminal Stream Member Variable
#_terminal_graphical_representation,2.4.9.2.5. Terminal Graphical Representation
#GeneralRemarkOnSignal,2.4.9.2.6. General Remark on Signal
#_general_remark_on_inflow_and_outflow,2.4.9.2.7. General Remark on Inflow and Outflow
#BuildConfiguration,2.4.10. Build Configurations
#_sourcefileset,2.4.10.1. SourceFileSet
#SourceFile,2.4.10.2. SourceFile
#_preprocessordefinition,2.4.10.3. PreprocessorDefinition
#_preprocessordefinitionoption,2.4.10.4. PreprocessorDefinition/Option
#_includedirectory,2.4.10.5. IncludeDirectory
#_library,2.4.10.6. Library
#_examples,2.4.10.7. Examples
#fmu-distribution,2.5. FMU Distribution
#structure-of-zip,2.5.1. Structure of the ZIP file
#documentation-directory,2.5.1.1. Directory <code>documentation</code>
#license-information,2.5.1.1.1. Directory <code>licenses</code>
#terminalsAndIcons-directory,2.5.1.2. Directory <code>terminalsAndIcons</code>
#sources-directory,2.5.1.3. Directory <code>sources</code>
#binaries-directory,2.5.1.4. Directory <code>binaries</code>
#platform-tupe-definition,2.5.1.4.1. Platform Tuple Definition
#platform-tuple-examples,2.5.1.4.2. Platform Tuple Examples
#external-libraries,2.5.1.4.3. External Libraries
#resources-directory,2.5.1.5. Directory <code>resources</code>
#extra-directory,2.5.1.6. Directory <code>extra</code>
#multipleInterfaceTypes,2.5.2. Multiple Interface Types
#dependency-on-external-tool,2.5.3. Dependency on Installed Tool
#_import_examples,2.5.4. Import Examples
#_accessing_fmi_functions_in_shared_libraries,2.5.4.1. Accessing FMI Functions in Shared Libraries
#_accessing_fmi_functions_in_static_libraries_and_source_code,2.5.4.2. Accessing FMI Functions in Static Libraries and Source Code
#VersioningLayered,2.6. Versioning and Layered Standards
#fmi-for-model-exchange,3. FMI for Model Exchange
#concepts-model-exchange,3.1. Concepts
#localizationStateEvents,3.1.1. Localization of State Events
#state-machine-model-exchange,3.2. State Machine for Model Exchange
#ContinuousTimeMode,3.2.1. State: Continuous-Time Mode
#_code_example,3.3. Code Example
#model-exchange-schema,3.4. Description Schema
#xml-example-model-exchange,3.4.1. Example Model Description File
#fmi-for-co-simulation,4. FMI for Co-Simulation
#concepts-co-simulation,4.1. Concepts
#smoothness,4.1.1. Smoothness Continuity and Discontinuity
#getting-output-derivatives,4.1.2. Getting Derivatives of Continuous Outputs
#early-return,4.1.3. Early Return
#state-machine-co-simulation,4.2. State Machine for Co-Simulation
#StepMode,4.2.1. State: Step Mode
#IntermediateUpdateMode,4.2.2. State: Intermediate Update Mode
#_code_examples,4.3. Code Examples
#_basic_co_simulation,4.3.1. Basic Co-Simulation
#_early_return,4.3.2. Early Return
#_event_mode,4.3.3. Event Mode
#_intermediate_update,4.3.4. Intermediate Update
#_connected_fmus,4.3.5. Connected FMUs
#co-simulation-schema,4.4. Description Schema
#_example_model_description_file,4.4.1. Example Model Description File
#xml-example-co-simulation,4.4.1.1. Example Model Description File with Early Return
#fmi-for-scheduled-execution,5. FMI for Scheduled Execution
#concepts-scheduled-execution,5.1. Concepts
#_activating_model_partitions,5.1.1. Activating Model Partitions
#preemption-support,5.1.2. Preemption Support
#state-machine-scheduled-execution,5.2. State Machine for Scheduled Execution
#ClockActivationMode,5.2.1. State: Clock Activation Mode
#ClockUpdateMode,5.2.2. State: Clock Update Mode
#example-scheduled-execution,5.3. Code Example
#_simulation_algorithm_implementation,5.3.1. Simulation Algorithm Implementation
#_fmu_implementation,5.3.2. FMU Implementation
#scheduled-execution-schema,5.4. Description Schema
#_example_model_description_file_2,5.4.1. Example Model Description File
#_references,References
#glossary,Appendix A: Glossary
#_acknowledgements,Appendix B: Acknowledgements
#_contributors,Appendix C: Contributors
