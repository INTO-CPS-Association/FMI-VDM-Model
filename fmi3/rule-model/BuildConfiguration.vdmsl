/*********************************************************************************
 *
 *	Copyright (c) 2017-2022, INTO-CPS Association,
 *	c/o Professor Peter Gorm Larsen, Department of Engineering
 *	Finlandsgade 22, 8200 Aarhus N.
 *
 *	MIT Licence:
 *
 *	Permission is hereby granted, free of charge, to any person obtaining a copy of
 *	this software and associated documentation files (the "Software"), to deal in
 *	the Software without restriction, including without limitation the rights to use,
 *	copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 *	Software, and to permit persons to whom the Software is furnished to do so,
 *	subject to the following conditions:
 *
 *	The above copyright notice and this permission notice shall be included in all
 *	copies or substantial portions of the Software.
 *
 *	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 *	INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 *	PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *	HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 *	OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 *	SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *	SPDX-License-Identifier: MIT
 *
 *********************************************************************************/
types
	FmiBuildDescription' = FmiBuildDescription
	inv fbd == allOf
	([
		apply[BuildConfiguration](inv_BuildConfiguration', fbd.buildConfiguration),
		inv_Annotations'(fbd.annotations)
	]);

	BuildConfiguration' = BuildConfiguration
	inv bc == allOf
	([
		apply[SourceFileSet](inv_SourceFileSet', bc.sourceFileSet),
		apply[Library](inv_Library', bc.library),
		inv_Annotations'(bc.annotations)
	]);

	SourceFileSet' = SourceFileSet
	inv sfs == allOf
	([
		apply[SourceFile](inv_SourceFile', sfs.sourceFile),
		apply[PreprocessorDefinition](inv_PreprocessorDefinition', sfs.preprocessorDefinition),
		apply[IncludeDirectory](inv_IncludeDirectory', sfs.includeDirectory),
		inv_Annotations'(sfs.annotations),

		-- Rules are defined in FMI3Rules.adoc
		rule("validCompilerOptions", validCompilerOptions(sfs)),
		rule("validSourceFileNames", validSourceFileNames(sfs)),
		rule("validPreprocessorDefinitionNames", validPreprocessorDefinitionNames(sfs)),
		rule("validIncludeDirectoryNames", validIncludeDirectoryNames(sfs))
	]);

	SourceFile' = SourceFile
	inv sf == allOf
	([
		inv_Annotations'(sf.annotations)
	]);

	PreprocessorDefinition' = PreprocessorDefinition
	inv pd == allOf
	([
		inv_Annotations'(pd.annotations)
	]);

	IncludeDirectory' = IncludeDirectory
	inv id == allOf
	([
		inv_Annotations'(id.annotations)
	]);

	Library' = Library
	inv lib == allOf
	([
		inv_Annotations'(lib.annotations)
	]);
