/*********************************************************************************
 *
 *	Copyright (c) 2017-2022, INTO-CPS Association,
 *	c/o Professor Peter Gorm Larsen, Department of Engineering
 *	Finlandsgade 22, 8200 Aarhus N.
 *
 *	MIT Licence:
 *
 *	Permission is hereby granted, free of charge, to any person obtaining a copy of
 *	this software and associated documentation files (the "Software"), to deal in
 *	the Software without restriction, including without limitation the rights to use,
 *	copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the
 *	Software, and to permit persons to whom the Software is furnished to do so,
 *	subject to the following conditions:
 *
 *	The above copyright notice and this permission notice shall be included in all
 *	copies or substantial portions of the Software.
 *
 *	THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 *	INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 *	PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 *	HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 *	OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 *	SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 *
 *	SPDX-License-Identifier: MIT
 *
 *********************************************************************************/

/**
 * General utility functions
 */

functions
	/**
	 * Convert a hex-binary string sequence to an fmi3Binary sequence
	 */
	hex2bin: seq of char -> fmi3Binary
	hex2bin(hex) ==
		let even = if len hex = 1 then "0" ^ hex else hex in
		[
			binOf(even(a)) * 16 + binOf(even(a+1)) | a in set inds even & a mod 2 = 1
		]
	measure len hex;

	binOf: char -> nat
	binOf(c) ==
		cases c:
			'0' -> 0,
			'1' -> 1,
			'2' -> 2,
			'3' -> 3,
			'4' -> 4,
			'5' -> 5,
			'6' -> 6,
			'7' -> 7,
			'8' -> 8,
			'9' -> 9,
			'A', 'a' -> 10,
			'B', 'b' -> 11,
			'C', 'c' -> 12,
			'D', 'd' -> 13,
			'E', 'e' -> 14,
			'F', 'f' -> 15,
			others -> undefined
		end;

