/**
 * This file is part of the INTO-CPS toolchain.
 *
 * Copyright (c) 2017-2019, INTO-CPS Association,
 * c/o Professor Peter Gorm Larsen, Department of Engineering
 * Finlandsgade 22, 8200 Aarhus N.
 *
 * All rights reserved.
 *
 * THIS PROGRAM IS PROVIDED UNDER THE TERMS OF GPL VERSION 3 LICENSE OR
 * THIS INTO-CPS ASSOCIATION PUBLIC LICENSE VERSION 1.0.
 * ANY USE, REPRODUCTION OR DISTRIBUTION OF THIS PROGRAM CONSTITUTES
 * RECIPIENT'S ACCEPTANCE OF THE OSMC PUBLIC LICENSE OR THE GPL 
 * VERSION 3, ACCORDING TO RECIPIENTS CHOICE.
 *
 * The INTO-CPS toolchain  and the INTO-CPS Association Public License are
 * obtained from the INTO-CPS Association, either from the above address, from
 * the URLs: http://www.into-cps.org, and in the INTO-CPS toolchain distribution.
 * GNU version 3 is obtained from: http://www.gnu.org/copyleft/gpl.html.
 *
 * This program is distributed WITHOUT ANY WARRANTY; without
 * even the implied warranty of  MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE, EXCEPT AS EXPRESSLY SET FORTH IN THE
 * BY RECIPIENT SELECTED SUBSIDIARY LICENSE CONDITIONS OF
 * THE INTO-CPS ASSOCIATION.
 *
 * See the full INTO-CPS Association Public License conditions for more details.
 */

/**
 * 2.2.7 Definition of Terminals
 */
types
	GraphicalRepresentation ::
		location					: Location
		coordinateSystem			: [CoordinateSystem]
		icon						: [Icon]
		terminal					: [GraphicalTerminal];

	CoordinateSystem ::
		location					: Location
		x1							: real
		y1							: real
		x2							: real
		y2							: real
		suggestedScalingFactorTo_mm	: real;

	Icon ::
		location					: Location
		x1							: real
		y1							: real
		x2							: real
		y2							: real
		iconSource_PNG				: AnyString
		iconSource_SVG				: [AnyString];

	GraphicalTerminal ::
		location					: Location
		name						: NormalizedString1
		defaultConnectionColor		: [seq of nat]
		defaultConnectionStrokeSize	: [real]
		x1							: real
		y1							: real
		x2							: real
		y2							: real
		iconSource_PNG				: AnyString
		iconSource_SVG				: [AnyString]
		vendorAnnotations			: [fmi3Annotation];

functions
	isValidGraphicalRepresentation: [GraphicalRepresentation] +> bool
	isValidGraphicalRepresentation(gr) ==
		gr <> nil =>
		{
			isValidCoordinateSystem(gr.coordinateSystem),
			isValidIcon(gr.icon),
			isValidTerminal(gr.terminal)
		} = {true};

	isValidCoordinateSystem: [CoordinateSystem] +> bool
	isValidCoordinateSystem(cs) ==
		cs <> nil =>
		{
			-- @OnFail("2.2.8 Coordinate area is not bottom left to top right at line %s", cs.location)
			( cs.x1 < cs.x2 and cs.y1 < cs.y2 ),

			-- @OnFail("2.2.8 suggestedScalingFactorTo_mm must be >0 at line %s", cs.location)
			( cs.suggestedScalingFactorTo_mm > 0 )
		} = {true};

	isValidIcon: [Icon] +> bool
	isValidIcon(icon) ==
		icon <> nil =>
			-- @OnFail("2.2.8 Icon area is not bottom left to top right at line %s", icon.location)
			( icon.x1 < icon.x2 and icon.y1 < icon.y2 );

	isValidTerminal: [GraphicalTerminal] +> bool
	isValidTerminal(gt) ==
		gt <> nil =>
		{
			-- @OnFail("2.2.8 Terminal area is not bottom left to top right at line %s", gt.location)
			( gt.x1 < gt.x2 and gt.y1 < gt.y2 ),

			-- @OnFail("2.2.8 Colour attributes must be octets (<=255) at line %s", gt.location)
			( gt.defaultConnectionColor <> nil =>
				forall c in seq gt.defaultConnectionColor & c <= 255 ),

			-- @OnFail("2.2.8 defaultConnectionStrokeSize must be >0 at line %s", gt.location)
			( gt.defaultConnectionStrokeSize <> nil =>
				gt.defaultConnectionStrokeSize > 0 ),

			-- @OnFail("2.2.8 Terminal vendor annotations invalid at line %s", gt.location)
			( isValidVendorAnnotation(gt.vendorAnnotations) )
		}
		= {true};
