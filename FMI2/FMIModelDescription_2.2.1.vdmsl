/**
 * Definitions relating to the top level FMU model description.
 */
types
	FMIModelDescription ::
		typeDefinitions		: set of SimpleType			-- May be empty set
		modelVariables		: seq of ScalarVariable		-- May be empty seq
		modelStructure		: ModelStructure

	inv m ==
		-- All model structure variables must be declared in model variables
		checkIndexes(len m.modelVariables, m.modelStructure.outputs)
		and checkIndexes(len m.modelVariables, m.modelStructure.derivatives)
		and checkIndexes(len m.modelVariables, m.modelStructure.initialUnknowns)

		-- At most one variable can be <independent>
		and card { i | i in seq m.modelVariables & i.causality = <independent> } <= 1

		-- Model structure outputs contain every model variable "output"
		and (let outputIndexes = { v | v in set inds m.modelVariables & m.modelVariables(v).causality = <output> },
				 structIndexes = { u.index | u in seq m.modelStructure.outputs }
			 in
				 structIndexes = outputIndexes)

		-- InitalUnknowns must be <input> + <exact> or <independent> variables
		and (m.modelStructure.initialUnknowns <> nil =>
			forall index in set { u.index | u in seq m.modelStructure.initialUnknowns } &
				let sv = m.modelVariables(index) in
					( sv.causality = <input> and sv.initial = <exact> ) 
					or sv.causality = <independent> );

functions
	checkIndexes: nat1 * [seq1 of Unknown] +> bool
	checkIndexes(vars, unknowns) ==
		unknowns <> nil =>
			forall u in seq unknowns & u.index <= vars;